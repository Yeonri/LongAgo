
# 파이프라인 스테이지
stages:
  - build_FE
  - build_BE
  - push_FE
  - push_BE
  - cleanup

variables:

  # Docker Hub 경로
  FE_IMAGE: "ssafyb101/my-fe"
  BE_IMAGE: "ssafyb101/my-be"



#######################
# 1. build_fe JOB 단계 #
#######################

build_FE:
  stage: build_FE
  image: docker:27.4.0
  variables:
    IMAGE_NAME: $FE_IMAGE
    DOCKERFILE_PATH: FE/Dockerfile
    CONTEXT: FE
  script:
    - echo "==========================="
    - echo "     FRONT-END빌드 중"
    - echo "==========================="
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHA -f $DOCKERFILE_PATH $CONTEXT
    - docker tag $IMAGE_NAME:$CI_COMMIT_SHA $IMAGE_NAME:latest

  when: always

#######################
# 2. build_be JOB 단계 #
#######################

build_be:
  stage: build_BE
  image: gradle:8.12.0-jdk17-alpine
  variables:
    IMAGE_NAME: $BE_IMAGE
    DOCKERFILE_PATH: BE/Dockerfile
    CONTEXT: BE
  script:
    - echo "==========================="
    - echo "      BACK-END빌드 중"
    - echo "==========================="
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHA -f $DOCKERFILE_PATH $CONTEXT
    - docker tag $IMAGE_NAME:$CI_COMMIT_SHA $IMAGE_NAME:latest

  when: always

######################
# 3. push_fe JOB 단계 #
######################

push_FE:
  stage: push_FE
  variables:
    IMAGE_NAME: $FE_IMAGE
  script:
    - echo "==========================="
    - echo "  FRONT-END 이미지 푸쉬 중"
    - echo "==========================="
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push $IMAGE_NAME:$CI_COMMIT_SHA
    - docker push $IMAGE_NAME:latest
  dependencies:
    - build_FE
  when: always


######################
# 4. push_be JOB 단계 #
######################
push_be:
  stage: push_BE
  variables:
    IMAGE_NAME: $BE_IMAGE
  script:
    - echo "==========================="
    - echo "  BACK-END 이미지 푸쉬 중"
    - echo "==========================="
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push $IMAGE_NAME:$CI_COMMIT_SHA
    - docker push $IMAGE_NAME:latest
  dependencies:
    - build_be
  when: always

#######################
# 5. 도커 이미지 정리  #
#######################

cleanup:
  stage: cleanup
  image: docker:27.4.0
  script:
    - echo "============================="
    - echo "  도커 이미지 및 캐시 정리 중"
    - echo "============================="
    
    # 불필요한 이미지 제거
    - docker image prune -f

    # 특정 이미지 태그 제거#
    - docker rmi $FE_IMAGE:$CI_COMMIT_SHA || true
    - docker rmi $FE_IMAGE:latest || true
    - docker rmi $BE_IMAGE:$CI_COMMIT_SHA || true
    - docker rmi $BE_IMAGE:latest || true

  when: always